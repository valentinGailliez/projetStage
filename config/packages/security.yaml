security:
    enable_authenticator_manager: true
    encoders:
       App\Entity\Security:
            # Use native password encoder
            # This value auto-selects the best possible hashing algorithm
            # (i.e. Sodium when available).
            algorithm: auto
       App\Entity\User:
          algorithm: auto

    
    providers:
        # used to reload user from session & other features (e.g. switch_user)
        app_user_provider:
            entity:
                class: App\Entity\User
                property: email
        # used to reload user from session & other features (e.g. switch_user)
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            anonymous: false
            lazy: true
            provider: app_user_provider
           
            # configure the maximum login attempts (per minute)
            login_throttling:
                limiter: app.login_rate_limiter
            custom_authenticator: App\Security\LoginFormAuthenticator
            logout:
                path: app_logout
                # where to redirect after logout
                # target: app_any_route
        
            

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    role_hierarchy:
        ROLE_STUDENT : ROLE_USER
        ROLE_TEACHER : ROLE_USER
        ROLE_REFERENT : ROLE_TEACHER
        ROLE_ADMIN : [ROLE_STUDENT, ROLE_REFERENT, ROLE_ALLOW_TO_SWITCH]
    
    access_control:
       -  { path: '^/evaluation/student', roles: ROLE_STUDENT }
    
services:
    app.login_rate_limiter:
        class: Symfony\Component\Security\Http\RateLimiter\DefaultLoginRateLimiter
        arguments:
            # globalFactory is the limiter for IP
            $globalFactory: '@limiter.ip_login'
            # localFactory is the limiter for username+IP
            $localFactory: '@limiter.username_ip_login'

framework:
    rate_limiter:
        # define 2 rate limiters (one for username+IP, the other for IP)
        username_ip_login:
            policy: token_bucket
            limit: 5
            rate: { interval: '5 minutes' }

        ip_login:
            policy: sliding_window
            limit: 50
            interval: '15 minutes'
